#!/bin/bash
xxd -e -g 4 -c 4 | sed -e 's/\(.*\): \(.\)\(.\)\(.\)\(.\)\(.\)\(.\)\(.\)\(.\)/\1 \2 \3 \4 \5 \6 \7 \8 \9 \6\7\8\9 \5\6\7\8\9 \4\5\6\7\8\9/g' | awk -e '

function parsehex(V)
{
    for(N=1; N<=length(V); N++)
        OUT=(OUT*16) + H[substr(V, N, 1)]

    T=substr(V,0,1)
    if (T == "f") { if (length(V)<8) V=substr("ffffffff",0,8-length(V))V }

    OUT=strtonum("0x"V)

    if (T == "f") return (OUT-2^32)

    return (OUT)
}

function jmpcalc(L,V)
{

	return sprintf("%x",(strtonum("0x"L)+4) + (V*4))
}

function reg(str)
{
    if (str == "0") return "R0 "
    if (str == "1") return "R1 "
    if (str == "2") return "R2 "
    if (str == "3") return "R3 "
    if (str == "4") return "R4 "
    if (str == "5") return "R5 "
    if (str == "6") return "R6 "
    if (str == "7") return "R7 "
    if (str == "8") return "R8 "
    if (str == "9") return "R9 "
    if (str == "a") return "R10"
    if (str == "b") return "R11"
    if (str == "c") return "MT "
    if (str == "d") return "R13"
    if (str == "e") return "SP "
    if (str == "f") return "LNK"

    return "x"
}

function cond(str)
{
    if (str == "0") return "MI"
    if (str == "1") return "EQ"
    if (str == "2") return "CS"
    if (str == "3") return "VS"
    if (str == "4") return "LS"
    if (str == "5") return "LT"
    if (str == "6") return "LE"
    if (str == "7") return "  "
    if (str == "8") return "PL"
    if (str == "9") return "NE"
    if (str == "a") return "CC"
    if (str == "b") return "VC"
    if (str == "c") return "HI"
    if (str == "d") return "GE"
    if (str == "e") return "GT"
    if (str == "f") return "NP"

    return "x"
}

($5 == "0" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   MOV  "reg($3)"        "reg($9)}
($5 == "1" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   LSL  "reg($3)" "reg($4)" "reg($9)}
($5 == "2" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   ASR  "reg($3)" "reg($4)" "reg($9)}
($5 == "3" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   ROR  "reg($3)" "reg($4)" "reg($9)}
($5 == "4" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   AND  "reg($3)" "reg($4)" "reg($9)}
($5 == "5" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   ANN  "reg($3)" "reg($4)" "reg($9)}
($5 == "6" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   IOR  "reg($3)" "reg($4)" "reg($9)}
($5 == "7" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   XOR  "reg($3)" "reg($4)" "reg($9)}
($5 == "8" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   ADD  "reg($3)" "reg($4)" "reg($9)}
($5 == "9" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   SUB  "reg($3)" "reg($4)" "reg($9)}
($5 == "a" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   MUL  "reg($3)" "reg($4)" "reg($9)}
($5 == "b" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   DIV  "reg($3)" "reg($4)" "reg($9)}
($5 == "c" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   FAD  "reg($3)" "reg($4)" "reg($9)}
($5 == "d" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   FSB  "reg($3)" "reg($4)" "reg($9)}
($5 == "e" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   FML  "reg($3)" "reg($4)" "reg($9)}
($5 == "f" && ($2 == "0" || $2 == "1" || $2 == "2" || $2 == "3"))  {print $1"  "$2$3$4$5$6$7$8$9"   FDV  "reg($3)" "reg($4)" "reg($9)}
                                                                                                         
                                                                                                         
($5 == "0" && ($2 == "4" ))                                        {print $1"  "$2$3$4$5$6$7$8$9"   MOV  "reg($3)"      "$10}
($5 == "0" && (             $2 == "5" ))                           {print $1"  "$2$3$4$5$6$7$8$9"   MOV  "reg($3)"  ffff"$10}
($5 == "0" && (                          $2 == "6" ))              {print $1"  "$2$3$4$5$6$7$8$9"   MHI  "reg($3)"      "$10}
($5 == "0" && (                                       $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   MHI  "reg($3)"  ffff"$10}
($5 == "1" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   LSL  "reg($3)" "reg($4)"  "$10}
($5 == "2" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   ASR  "reg($3)" "reg($4)"  "$10}
($5 == "3" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   ROR  "reg($3)" "reg($4)"  "$10}
($5 == "4" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   AND  "reg($3)" "reg($4)"  "$10}
($5 == "5" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   ANN  "reg($3)" "reg($4)"  "$10}
($5 == "6" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   IOR  "reg($3)" "reg($4)"  "$10}
($5 == "7" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   XOR  "reg($3)" "reg($4)"  "$10}
($5 == "8" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   ADD  "reg($3)" "reg($4)"  "$10}
($5 == "9" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   SUB  "reg($3)" "reg($4)"  "$10}
($5 == "a" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   MUL  "reg($3)" "reg($4)"  "$10}
($5 == "b" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   DIV  "reg($3)" "reg($4)"  "$10}
($5 == "c" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   FAD  "reg($3)" "reg($4)"  "$10}
($5 == "d" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   FSB  "reg($3)" "reg($4)"  "$10}
($5 == "e" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   FML  "reg($3)" "reg($4)"  "$10}
($5 == "f" && ($2 == "4" || $2 == "5" || $2 == "6" || $2 == "7"))  {print $1"  "$2$3$4$5$6$7$8$9"   FDV  "reg($3)" "reg($4)"  "$10}

$2 == "8"   {print $1"  "$2$3$4$5$6$7$8$9"   LDW  "reg($3)" "reg($4)" "$11}
$2 == "9"   {print $1"  "$2$3$4$5$6$7$8$9"   LDB  "reg($3)" "reg($4)" "$11}
$2 == "a"   {print $1"  "$2$3$4$5$6$7$8$9"   STW  "reg($3)" "reg($4)" "$11}
$2 == "b"   {print $1"  "$2$3$4$5$6$7$8$9"   STB  "reg($3)" "reg($4)" "$11}


$2 == "c"   {print $1"  "$2$3$4$5$6$7$8$9"   B"cond($3)"             "reg($9)}
$2 == "d"   {print $1"  "$2$3$4$5$6$7$8$9"   BL"cond($3)"            "reg($9)}
$2 == "e"   {print $1"  "$2$3$4$5$6$7$8$9"   B"cond($3)"         "parsehex($12)" @"jmpcalc($1,parsehex($12))}
$2 == "f"   {print $1"  "$2$3$4$5$6$7$8$9"   BL"cond($3)"        "parsehex($12)" @"jmpcalc($1,parsehex($12))}

'
